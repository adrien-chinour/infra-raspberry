version: '3.7'
services:
    nginx:
        container_name: nginx
        restart: always
        image: nginx:latest
        depends_on:
            - php
        volumes:
            - ./web:/app
            - ./config/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - lan
            - traefik_network
        labels:
            - "traefik.enable=true"
            - "traefik.docker.network=traefik_network"
            - "traefik.http.routers.dashboard.entrypoints=websecure"
            - "traefik.http.routers.dashboard.rule=Host(`${DASHBOARD_HOST}`)"
            - "traefik.http.routers.dashboard.tls=true"
            - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
            - "traefik.http.services.dashboard.loadbalancer.server.port=80"
    php:
        container_name: php
        restart: always
        build: .
        depends_on:
            - postgres
        environment:
            TZ: 'Europe/Paris'
            POSTGRES_HOST: 'postgres'
            POSTGRES_DATABASE: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            APP_ENV: ${SYMFONY_ENV}
            APP_SECRET: ${SYMFONY_SECRET}
        volumes:
            - ./web:/app
            - /mediastorage:/mediastorage
            - /cloud:/cloud
        networks:
            - lan
    postgres:
        container_name: postgres
        restart: always
        image: arm64v8/postgres:13
        environment:
            PGDATA: '/var/lib/postgresql/data/pgdata'
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - db:/var/lib/postgresql/data/pgdata
        networks:
            - lan

volumes:
    db:

networks:
    traefik_network:
        external: true
    lan:
